% This file was created with JabRef 2.10b2.
% Encoding: ISO8859_1


@Article{Backus1978plv,
  Title                    = {{Can Programming Be Liberated from the Von Neumann Style?: A Functional Style and Its Algebra of Programs}},
  Author                   = {Backus, John},
  Year                     = {1978},
  Doi                      = {10.1145/359576.359579},
  Month                    = aug,
  Number                   = {8},
  Pages                    = {613--641},
  Url                      = {http://doi.acm.org/10.1145/359576.359579},
  Volume                   = {21},

  Address                  = {New York, NY, USA},
  Citeulike-article-id     = {13199463},
  Citeulike-linkout-0      = {http://dx.doi.org/10.1145/359576.359579},
  Citeulike-linkout-1      = {http://doi.acm.org/10.1145/359576.359579},
  Journal                  = {Commun. ACM},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:46:04},
  Priority                 = {0},
  Publisher                = {ACM}
}

@Article{Church1940fst,
  Title                    = {{A Formulation of the Simple Theory of Types}},
  Author                   = {Church, Alonzo},
  Year                     = {1940},
  Number                   = {2},
  Pages                    = {56--68},
  Volume                   = {5},

  Citeulike-article-id     = {13199452},
  Journal                  = {J. Symb. Log.},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:37:01},
  Priority                 = {0}
}

@Article{Hughes1989wfp,
  Title                    = {{Why Functional Programming Matters}},
  Author                   = {Hughes, John},
  Year                     = {1989},
  Number                   = {2},
  Pages                    = {98--107},
  Volume                   = {32},

  Citeulike-article-id     = {13199454},
  Journal                  = {Comput. J.},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:38:53},
  Priority                 = {0}
}

@Article{Landin1964mee,
  Title                    = {{The Mechanical Evaluation of Expressions}},
  Author                   = {Landin, P. J.},
  Year                     = {1964},
  Doi                      = {10.1093/comjnl/6.4.308},
  Month                    = jan,
  Number                   = {4},
  Pages                    = {308--320},
  Url                      = {http://dx.doi.org/10.1093/comjnl/6.4.308},
  Volume                   = {6},

  Abstract                 = {This paper is a contribution to the "theory" of the activity of using computers. It shows how some forms of expression used in current programming languages can be modelled in Church's {lambda}-notation, and then describes a way of "interpreting" such expressions. This suggests a method, of analyzing the things computer users write, that applies to many different problem orientations and to different phases of the activity of using a computer. Also a technique is introduced by which the various composite information structures involved can be formally characterized in their essentials, without commitment to specific written or other representations. 10.1093/comjnl/6.4.308},
  Day                      = {1},
  Journal                  = {The Computer Journal},
  Keywords                 = {stacs-fp-reading-group}
}

@Inproceedings{Marlow2011mdp,
  Title                    = {{A Monad for Deterministic Parallelism}},
  Author                   = {Marlow, Simon and Newton, Ryan and Peyton Jones, Simon},
  Booktitle                = {Proceedings of the 4th ACM Symposium on Haskell},
  Year                     = {2011},
  Doi                      = {10.1145/2034675.2034685},
  Location                 = {Tokyo, Japan},
  Pages                    = {71--82},
  Publisher                = {ACM},
  Series                   = {Haskell '11},
  Url                      = {http://doi.acm.org/10.1145/2034675.2034685},

  Address                  = {New York, NY, USA},
  Citeulike-article-id     = {13199461},
  Citeulike-linkout-0      = {http://dx.doi.org/10.1145/2034675.2034685},
  Citeulike-linkout-1      = {http://doi.acm.org/10.1145/2034675.2034685},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:45:25},
  Priority                 = {0}
}

@Inproceedings{McCarthy2007ccp,
  Title                    = {{Compiling Cryptographic Protocols for Deployment on the Web}},
  Author                   = {McCarthy, Jay A. and Krishnamurthi, Shriram and Guttman, Joshua D. and Ramsdell, John D.ccp},
  Booktitle                = {Proceedings of the 16th International Conference on World Wide Web},
  Year                     = {2007},
  Doi                      = {10.1145/1242572.1242665},
  Location                 = {Banff, Alberta, Canada},
  Pages                    = {687--696},
  Publisher                = {ACM},
  Series                   = {WWW '07},
  Url                      = {http://doi.acm.org/10.1145/1242572.1242665},

  Address                  = {New York, NY, USA},
  Citeulike-article-id     = {13230123},
  Citeulike-linkout-0      = {http://dx.doi.org/10.1145/1242572.1242665},
  Citeulike-linkout-1      = {http://doi.acm.org/10.1145/1242572.1242665},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-06-16 14:35:12},
  Priority                 = {0}
}

@Article{Mens2004ssr,
  Title                    = {{A survey of software refactoring}},
  Author                   = {Mens, T. and Tourwe, T.},
  Year                     = {2004},
  Doi                      = {10.1109/TSE.2004.1265817},
  Month                    = feb,
  Number                   = {2},
  Pages                    = {126--139},
  Url                      = {http://dx.doi.org/10.1109/TSE.2004.1265817},
  Volume                   = {30},

  Citeulike-article-id     = {13199464},
  Citeulike-linkout-0      = {http://dx.doi.org/10.1109/TSE.2004.1265817},
  Journal                  = {Software Engineering, IEEE Transactions on},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:49:17},
  Priority                 = {2}
}

@Article{Milner1992cmp,
  Title                    = {A calculus of mobile processes, \\{II\\}},
  Author                   = {Milner, Robin and Parrow, Joachim and Walker, David},
  Year                     = {1992},
  Doi                      = {http://dx.doi.org/10.1016/0890-5401(92)90009-5},
  Number                   = {1},
  Pages                    = {41--77},
  Url                      = {http://www.sciencedirect.com/science/article/pii/0890540192900095},
  Volume                   = {100},

  Citeulike-article-id     = {13199460},
  Citeulike-linkout-0      = {http://dx.doi.org/http://dx.doi.org/10.1016/0890-5401(92)90009-5},
  Citeulike-linkout-1      = {http://www.sciencedirect.com/science/article/pii/0890540192900095},
  Journal                  = {Information and Computation},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:44:12},
  Priority                 = {0}
}

@Article{Milner1992cmp,
  Title                    = {{A calculus of mobile processes, I}},
  Author                   = {Milner, Robin and Parrow, Joachim and Walker, David},
  Year                     = {1992},
  Doi                      = {http://dx.doi.org/10.1016/0890-5401(92)90008-4},
  Number                   = {1},
  Pages                    = {1--40},
  Url                      = {http://www.sciencedirect.com/science/article/pii/0890540192900084},
  Volume                   = {100},

  Citeulike-article-id     = {13199459},
  Citeulike-linkout-0      = {http://dx.doi.org/http://dx.doi.org/10.1016/0890-5401(92)90008-4},
  Citeulike-linkout-1      = {http://www.sciencedirect.com/science/article/pii/0890540192900084},
  Journal                  = {Information and Computation},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:44:12},
  Priority                 = {0}
}

@Article{Trinder1998asp,
  Title                    = {{Algorithm + Strategy = Parallelism}},
  Author                   = {Trinder, P. W. and Hammond, K. and -W and {S. L} and Jones, Peyton},
  Year                     = {1998},
  Pages                    = {23--60},
  Url                      = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.51.1628},
  Volume                   = {8},

  Abstract                 = {{The process of writing large parallel programs is complicated by the need to specify both the parallel behaviour of the program and the algorithm that is to be used to compute its result. This paper introduces evaluation strategies, lazy higher-order functions that control the parallel evaluation of non-strict functional languages. Using evaluation strategies, it is possible to achieve a clean separation between algorithmic and behavioural code. The result is enhanced clarity and shorter parallel programs. Evaluation strategies are a very general concept: this paper shows how they can be used to model a wide range of commonly used programming paradigms, including divideand-conquer, pipeline parallelism, producer/consumer parallelism, and data-oriented parallelism. Because they are based on unrestricted higher-order functions, they can also capture irregular parallel structures. Evaluation strategies are not just of theoretical interest: they have evolved out of our experience in parallelising several large-scale parallel applications, where they have proved invaluable in helping to manage the complexities of parallel behaviour. Some of these applications are described in detail here. The largest application we have studied to date, Lolita, is a 60,000 line natural language engineering system. Initial results show that for these programs we can achieve acceptable parallel performance, for relatively little programming effort. 1 Writing Parallel Programs While it is hard to write good sequential programs, it can be considerably harder to write good parallel ones. At Glasgow we have worked on several fairly large parallel programming projects and have slowly, and sometimes painfully, developed a methodology for parallelising sequential programs. The essence of the problem facing the parallel programmer is that, in addition to specifying what value the program should compute, explicitly parallel programs}},
  Journal                  = {Journal of Functional Programming},
  Keywords                 = {stacs-fp-reading-group}
}

@Inproceedings{Volpano1997tba,
  Title                    = {{A Type-Based Approach to Program Security}},
  Author                   = {Volpano, Dennis M. and Smith, Geoffrey},
  Booktitle                = {TAPSOFT},
  Editor                   = {Bidoit, Michel and Dauchet, Max},
  Year                     = {1997},
  Pages                    = {607--621},
  Publisher                = {Springer},
  Series                   = {Lecture Notes in Computer Science},
  Volume                   = {1214},

  Citeulike-article-id     = {13199455},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:41:42},
  Priority                 = {0}
}

@Proceedings{Bidoit1997a,
  Title                    = {{TAPSOFT'97: Theory and Practice of Software Development, 7th International Joint Conference CAAP/FASE, Lille, France, April 14-18, 1997, Proceedings}},
  Editor                   = {Bidoit, Michel and Dauchet, Max},
  Year                     = {1997},
  Publisher                = {Springer},
  Series                   = {Lecture Notes in Computer Science},
  Volume                   = {1214},

  Booktitle                = {TAPSOFT},
  Citeulike-article-id     = {13199456},
  Keywords                 = {stacs-fp-reading-group},
  Posted-at                = {2014-05-24 14:41:42},
  Priority                 = {0}
}

